{"name":"wxGo","tagline":"Golang wxWidgets Wrapper","body":"### Welcome to wxGo\r\nwxGo is a Golang Wrapper for wxWidgets and now is under developing.\r\n\r\n### Issues\r\nSince GoLang only supports static-link currently, the size of the final executalble program grows larger as more classes are added into wxGo. Is GoLang really suitable for user applications?\r\n\r\n\r\n###Screen Shot\r\n![screenshot](https://github.com/acehypocrisy/wxGo/blob/master/example/screenshot.jpg)\r\n\r\n###Have a Try\r\nThe project has only been built and tested on Linux_amd_64 currently.\r\n\r\n1. Compile wxWidgets\r\n\r\n    You can compile wxWidgets using your favourite configuration option. However, if you want to build wxGo as shared library, you have to add `-fPIC` flag to cflags/cppflags/cxxflags. \r\n\r\n    > When compiling wxGo, it will use the file `WX_SOURCE_ROOT/wx-config` (which is used to generate cxxflags and libflags for wxGo) and the files under`WX_SOURCE_ROOT/lib/` (which contains your generated wx-libs and the script that wx-config is linked to). So in fact these files are enough (but need to keep the directory structure).\r\n\r\n2. Compile wxGo\r\n\r\n    Just switch to build/ and run `./make_lib_oneclick.sh` and it will generate the library file in lib/ and temporary files in build/out/ . _This script is just for amd64 architecture._ If you are using 32bit system, maybe you have to modify the script in **at least** one place: change `-intgosize 64` to `-intgosize 32`.\r\n\r\n3. How to Use\r\n\r\n    In your go file, add `import \"./wx\"`. The path depends on the place where `wx.a` is. `example/test.go` can be refered.\r\n\r\n    When compiling, please use `go tool 6g FileName.go` & `go tool 6l FileName.6` to compile the code. Also, please make sure `wxgo.so` is in your system library path, or you can use `export LD_LIBRARY_PATH=WXGO_SO_PATH:$LD_LIBRARY_PATH` (replace WXGO_SO_PATH using your own path) to add lib path.\r\n\r\n4. Have Fun!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}